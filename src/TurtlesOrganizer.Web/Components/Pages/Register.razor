@page "/register"
@using TurtlesOrganizer.Application.DTOs
@using TurtlesOrganizer.Application.Services
@inject IAuthService AuthService
@inject NavigationManager Navigation

<PageTitle>Register</PageTitle>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h3>Register</h3>
                </div>
                <div class="card-body">
                    @if (!string.IsNullOrEmpty(successMessage))
                    {
                        <div class="alert alert-success">
                            @successMessage
                            <br />
                            <a href="/login" class="alert-link">Click here to login</a>
                        </div>
                    }
                    else
                    {
                        <EditForm Model="@model" OnValidSubmit="HandleRegister" FormName="RegisterForm">
                            <DataAnnotationsValidator />
                            
                            <div class="mb-3">
                                <label class="form-label">Full Name</label>
                                <InputText @bind-Value="model.FullName" class="form-control" />
                            </div>

                            <div class="mb-3">
                                <label class="form-label">Email</label>
                                <InputText @bind-Value="model.Email" type="email" class="form-control" />
                            </div>

                            <div class="mb-3">
                                <label class="form-label">Password</label>
                                <InputText @bind-Value="model.Password" type="password" class="form-control" />
                            </div>

                            @if (!string.IsNullOrEmpty(errorMessage))
                            {
                                <div class="alert alert-danger">@errorMessage</div>
                            }

                            <button type="submit" class="btn btn-primary w-100">Register</button>
                        </EditForm>

                        <div class="mt-3 text-center">
                            <a href="/login">Already have an account? Login</a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    private RegisterModel model { get; set; } = new();
    
    private string? errorMessage;
    private string? successMessage;

    private async Task HandleRegister()
    {
        try
        {
            var dto = new RegisterUserDto(model.FullName, model.Email, model.Password);
            var user = await AuthService.RegisterAsync(dto);
            
            // Show success message instead of redirecting
            successMessage = $"Account created successfully for {model.FullName}!";
            errorMessage = null;
            
            // Clear form
            model = new();
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
            successMessage = null;
        }
    }

    private class RegisterModel
    {
        public string FullName { get; set; } = "";
        public string Email { get; set; } = "";
        public string Password { get; set; } = "";
    }
}